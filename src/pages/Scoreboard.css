.scoreboard-container {
  display: flex;
  flex-direction: column;
  position: fixed; /* Force fixed to ensure full coverage */
  min-height: 100vh;
  height: 100vh; /* Force full height */
  width: 100vw; /* Force full width */
  background-color: var(--bg-color);
  color: var(--text-color);
  overflow: hidden;
  max-height: 100vh;
  box-sizing: border-box;
  margin: 0; /* Force no margins */
  padding: 0; /* Force no padding */
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border: none; /* Ensure no borders */
}

.scoreboard-buttons {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  overflow: hidden; /* Prevent scrolling */
}

/* Additional spacing for portrait layout to create a visual gap between buttons */
@media (orientation: portrait) {
  .scoreboard-buttons {
    padding: 0; /* Remove padding to eliminate space */
    gap: 0; /* Remove gap between buttons */
  }
}

.score-button {
  display: flex;
  flex-direction: column;
  justify-content: center; /* Changed to center content vertically */
  align-items: center;
  flex: 1;
  position: relative; /* Ensure absolute positioning context */
  cursor: pointer;
  user-select: none;
  transition: background-color 0.2s, transform 0.1s;
  overflow: visible; /* Allow content to overflow if needed */
  touch-action: none; /* Prevent default touch actions like scrolling */
  padding-bottom: 90px; /* Increased bottom padding for set circles */
  box-sizing: border-box;
  min-height: 100px;
  text-align: center;
  background-color: var(--scoreboard-bg);
  color: var(--text-color);
  border: 1px solid var(--scoreboard-border);
}

.score-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  /* This will be auto-height based on contents */
}

/* Add specific styling for team name and score */
.team-name {
  color: var(--text-color); /* Use theme text color */
  font-size: clamp(3rem, 9vw, 5rem); /* Responsive sizing */
  font-weight: 700; /* Increased from 600 for better visibility */
  text-transform: uppercase;
  margin-top: 0; /* Removed top margin to help with centering */
  margin-bottom: 0.2rem;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3); /* Enhanced shadow for better readability */
  letter-spacing: 0.05em; /* Slightly increase letter spacing for readability */
  text-align: center;
  width: 100%;
  z-index: 1;
}

.score {
  color: var(--score-color); /* Use theme score color */
  font-size: var(--score-size, clamp(30rem, 105vw, 75rem)); /* Use font-specific size with fallback */
  font-weight: var(--score-font-weight, bold); /* Use font-specific weight with fallback */
  text-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
  z-index: 1;
  line-height: var(--score-line-height, 0.8); /* Use font-specific line height with fallback */
  letter-spacing: var(--score-letter-spacing, normal); /* Use font-specific letter spacing with fallback */
  width: 100%;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: var(--score-padding, 0); /* Use font-specific padding with fallback */
  margin: 0;
  overflow: visible;
  min-width: max-content;
  white-space: nowrap;
}

.score-button:active,
.score-button.pressed {
  transform: scale(0.98);
  filter: brightness(0.9);
}

.score-button.auto-decrementing {
  transform: scale(0.97);
  animation: pulse 0.4s infinite alternate;
}

@keyframes pulse {
  0% {
    filter: brightness(0.8);
    transform: scale(0.97);
  }
  100% {
    filter: brightness(1);
    transform: scale(0.99);
  }
}

/* Landscape orientation adjustments */
@media (orientation: landscape) {
  /* Adjust scoreboard container */
  .scoreboard-container {
    height: 100vh; /* Force full height */
    width: 100vw; /* Force full width */
    overflow: hidden;
    /* Ensure it covers the entire viewport */
    margin: 0;
    padding: 0;
    position: fixed; /* Force fixed position */
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    /* No padding for landscape to avoid white space */
    border: none; /* Ensure no borders */
    max-width: 100vw; /* Ensure it doesn't exceed viewport width */
  }
  
  .score-content {
    margin-top: 20px; /* Add space above the content in landscape */
    margin-bottom: 40px; /* Add space below the content for set circles */
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  
  .score {
    /* Use CSS variable instead of hardcoded font size */
    /* font-size: clamp(32rem, 72vh, 64rem); */
    padding-bottom: 0; /* Remove padding as we're using margin on score-content */
  }
  
  .team-name {
    font-size: clamp(1.8rem, 4vh, 3.2rem); /* Adjusted to be more balanced with portrait size */
    margin-top: 1rem; /* Add padding above team name in landscape */
    margin-bottom: 1rem; /* Increase space between team name and score */
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
  }
  
  /* Critical: Set layout to horizontal in landscape */
  .scoreboard-buttons {
    flex-direction: row; /* Display teams side by side */
    overflow: hidden; /* Prevent scrolling */
    width: 100vw; /* Force full width */
    height: 100vh; /* Force full height */
    margin: 0;
    padding: 0;
    position: absolute; /* Ensure it fills the container */
    top: 0;
    left: 0;
    right: 0; /* Ensure it extends to the right edge */
  }
  
  .score-button {
    width: 50%; /* Each takes half the width */
    height: 100%; /* Full height of the container */
    max-height: 100%;
    padding: 0; /* Reset padding */
    padding-bottom: calc(60px + env(safe-area-inset-bottom, 0px)); /* Add only bottom padding for set circles */
    display: flex;
    flex-direction: column;
    justify-content: center; /* Center content vertically */
    align-items: center;
    overflow: visible;
    position: relative; /* Ensure absolute positioning works */
    border: 1px solid var(--scoreboard-border); /* Ensure border */
    margin: 0;
    box-sizing: border-box; /* Include borders in width calculation */
  }
  
  /* Reposition settings button */
  .settings-button {
    bottom: calc(15px + var(--safe-area-inset-bottom, 0px)); /* Account for safe area */
    bottom: calc(15px + env(safe-area-inset-bottom, 0px)); /* Direct env() support */
    right: calc(30px + var(--safe-area-inset-right, 0px)); /* Move further to the right */
    right: calc(30px + env(safe-area-inset-right, 0px)); /* Direct env() support */
  }
  
  /* Additional styling for set circles in landscape */
  .team-sets-circles {
    bottom: calc(10px + env(safe-area-inset-bottom, 0px)); /* Position closer to bottom */
    position: absolute;
    width: 100%;
    left: 0;
    right: 0;
    margin: 0 auto; /* Ensure centered */
    z-index: 100; /* Increase z-index to ensure visibility */
  }
  
  /* Make circles and buttons slightly smaller in landscape */
  .set-circle {
    width: 20px;
    height: 20px;
  }
  
  .sets-button {
    width: 24px;
    height: 24px;
    min-width: 24px;
    min-height: 24px;
    max-width: 24px;
    max-height: 24px;
    font-size: 14px;
  }
}

/* Portrait orientation with various screen sizes */
@media (orientation: portrait) {
  /* Both buttons take 50% height with no space in between */
  .scoreboard-buttons {
    display: flex;
    flex-direction: column;
    height: 100%;
    width: 100%;
    justify-content: flex-start; /* Align buttons to the top */
    gap: 0; /* No gap between buttons */
  }
  
  .score-button {
    min-height: 0; /* Override the min-height from the base style */
    max-height: 50%; /* Limit to 50% */
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    justify-content: center; /* Center the content vertically */
    align-items: center;
    padding-top: 0; /* Remove top padding */
    padding-bottom: calc(60px + env(safe-area-inset-bottom, 0px)); /* More space for set circles */
    overflow: visible;
    position: relative; /* Ensure position context for absolute children */
  }
  
  /* Both buttons take 50% height */
  .score-button:first-child,
  .score-button:last-child {
    height: 50%;
    flex: 0.50;
  }
  
  /* Score content container in portrait mode */
  .score-content {
    margin-top: 0; /* Remove negative margin to move content down */
    transform: translateY(10px); /* Move content down to improve vertical positioning */
  }
  
  /* Create a wrapper for team name and score to center them together */
  .team-name {
    margin-top: 0; /* Remove top margin in portrait */
    margin-bottom: 0.2rem;
    font-size: clamp(2.4rem, 7vw, 4rem); /* Reduced size in portrait */
  }
  
  /* Adjust score size for portrait */
  .score {
    /* Use CSS variable instead of hardcoded font size */
    /* font-size: clamp(30rem, 105vw, 60rem); */
    padding-bottom: 0; /* Remove padding as we'll position set circles absolutely */
    line-height: 0.9;
  }
  
  /* Ensure sets are fixed at the very bottom of each button in portrait */
  .team-sets-circles {
    position: absolute;
    bottom: calc(10px + env(safe-area-inset-bottom, 0px)); /* Closer to bottom */
    left: 0;
    right: 0;
    width: 100%;
    margin: 0 auto;
    z-index: 100; /* Even higher z-index for visibility */
  }
  
  /* Ensure home and away sets are correctly positioned */
  .home-sets-circles, .away-sets-circles {
    position: absolute;
    bottom: calc(25px + var(--safe-area-inset-bottom, 0px)); /* Position with safe area inset */
    bottom: calc(25px + env(safe-area-inset-bottom, 0px)); /* Direct env() support */
    left: 0;
    right: 0;
    width: 100%;
    display: flex;
    justify-content: center;
    z-index: 50; /* Higher z-index to ensure visibility */
  }
}

/* Extra fixes for portrait mode to set buttons with space at bottom */
@media (orientation: portrait) {
  .scoreboard-container {
    display: flex;
    flex-direction: column;
    height: 100vh;
    padding: 0; /* Ensure no padding */
    /* margin-top: -40px; */
    background-color: black;
  }
  
  .scoreboard-buttons {
    display: flex;
    flex-direction: column;
    height: 100%; /* 100% total height */
    flex: 0.98;
    justify-content: flex-start; /* Align buttons to top */
    padding: 0; /* No padding */
    margin: 0; /* No margin */
    gap: 0; /* No gap */
  }
  
  /* Top button flush with top */
  .score-button:first-child {
    flex: 0.48; /* 48% of the available space */
    height: 48%;
    min-height: 0;
    max-height: 48%;
    margin: 0; /* No margin */
    padding-top: 0; /* No padding top */
  }
  
  /* Bottom button flush with top button, with no space */
  .score-button:last-child {
    flex: 0.48; /* 48% of the available space */
    height: 48%;
    min-height: 0;
    max-height: 48%;
    margin: 0; /* No margin */
  }
}

@media (orientation: portrait) and (max-width: 480px) {
  /* Score size is now controlled by CSS variables */
  /* .score {
    font-size: clamp(30rem, 105vw, 60rem);
  } */
  
  .team-name {
    font-size: clamp(1.8rem, 6vw, 2.8rem); /* Reduced sizing for better positioning */
    /* Small space between team name and score */
    margin-bottom: 0.1rem;
  }
  
  /* Ensure set circles are positioned properly on small screens */
  .team-sets-circles {
    bottom: 10px; /* Adjusted for smaller screens */
  }
}

/* Special adjustments for tall phones in portrait orientation */
@media (orientation: portrait) and (min-height: 800px) {
  .scoreboard-buttons {
    height: 100%;
    justify-content: flex-start;
    gap: 0;
  }
  
  /* Both buttons take 50% height on taller phones */
  .score-button:first-child,
  .score-button:last-child {
    height: 50%;
    flex: 0.50;
    max-height: 50%;
    margin: 0;
  }
  
  /* Adjust padding for safe areas */
  .score-button:first-child {
    padding-top: 0; /* Remove top padding */
  }
  
  .score-button:last-child {
    padding-bottom: calc(60px + env(safe-area-inset-bottom, 0px));
  }
}

/* Media queries for responsive sets display */
@media (max-width: 400px) {
  .sets-label {
    font-size: 0.7rem;
  }
  
  .sets-value {
    font-size: 1rem;
    margin: 0 0.3rem;
    color: var(--home-team-text-color, black);
  }
  
  .sets-button {
    width: 1.3rem;
    height: 1.3rem;
    font-size: 0.9rem;
  }
}

.settings-button {
  position: fixed; /* Change to fixed to ensure it stays in position */
  bottom: calc(20px + var(--safe-area-inset-bottom, 0px)); /* Account for safe area */
  bottom: calc(20px + env(safe-area-inset-bottom, 0px)); /* Direct env() support */
  right: 20px;
  width: 50px; /* Consistent size */
  height: 50px; /* Consistent size */
  border-radius: 50%;
  background-color: var(--primary-color); /* Use theme color */
  color: var(--primary-text-color, white); /* Use theme variable for contrast, fallback to white */
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  z-index: 100; /* Ensure it's above everything */
  border: none;
  cursor: pointer;
  transition: background-color 0.2s, transform 0.1s;
}

.settings-button:active {
  transform: scale(0.95);
}

.settings-button.pressed {
  background-color: var(--primary-hover-color, #357abd);
  transform: scale(0.95);
  box-shadow: 0 1px 5px rgba(0, 0, 0, 0.4);
}

.settings-button svg {
  width: 25px;
  height: 25px;
  color: white;
}

/* Ensure consistent settings button size in both orientations */
@media (orientation: landscape), (orientation: portrait) {
  .settings-button {
    width: 50px;
    height: 50px;
  }
  
  .settings-button svg {
    width: 25px;
    height: 25px;
  }
}

/* Comment Button */
.comment-button {
  position: fixed; /* Fixed positioning like settings button */
  top: calc(20px + var(--safe-area-inset-top, 0px)); /* Account for safe area at top */
  top: calc(20px + env(safe-area-inset-top, 0px)); /* Direct env() support */
  left: 20px; /* Position in upper left */
  width: 50px; /* Same size as settings button */
  height: 50px; /* Same size as settings button */
  border-radius: 50%;
  background-color: var(--primary-color); /* Use theme color */
  color: var(--primary-text-color, white); /* Use theme variable for contrast */
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  z-index: 100; /* Ensure it's above everything */
  border: none;
  cursor: pointer;
  transition: background-color 0.2s, transform 0.1s;
}

.comment-button:hover {
  background-color: var(--primary-hover-color, #357abd);
}

.comment-button:active {
  transform: scale(0.95);
}

.comment-button svg {
  width: 25px;
  height: 25px;
  color: white;
}

/* Ensure consistent comment button size in both orientations */
@media (orientation: landscape), (orientation: portrait) {
  .comment-button {
    width: 50px;
    height: 50px;
  }
  
  .comment-button svg {
    width: 25px;
    height: 25px;
  }
}

.timer-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.timer-controls {
  display: flex;
  gap: 20px;
  margin-top: 12px;
}

.timer-button {
  padding: 10px 20px;
  border-radius: 24px;
  font-size: 1rem;
  min-width: 100px;
  text-transform: uppercase;
  font-weight: 500;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.timer-button.play {
  background-color: var(--success-color);
}

.timer-button.pause {
  background-color: var(--primary-color);
}

.timer-button.reset {
  background-color: var(--secondary-color);
}

.scores-container {
  display: flex;
  justify-content: space-between;
  margin-bottom: 32px;
}

.action-buttons {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 20px;
  margin-top: 32px;
}

.action-button {
  padding: 12px 20px;
  border-radius: 24px;
  background-color: var(--secondary-color);
  font-size: 1rem;
  text-transform: uppercase;
  font-weight: 500;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  min-width: 120px;
  text-align: center;
}

/* Responsive styles */
@media (max-width: 480px) {
  .team-name {
    font-size: clamp(1.6rem, 5.5vw, 2.2rem);
  }
}

/* Further optimize for small screens by reducing team name size */
@media (max-height: 500px) or (max-width: 350px) {
  .team-name {
    font-size: clamp(1.5rem, 5vw, 2rem);
    margin: 0;
  }
}

/* Position set circles for portrait mode */
@media (orientation: portrait) {
  .home-sets-circles {
    bottom: calc(30px + env(safe-area-inset-bottom, 0px)); /* Increase bottom distance for better visibility */
    top: auto;
    position: absolute;
    z-index: 100; /* Higher z-index */
  }
  
  .away-sets-circles {
    bottom: calc(30px + env(safe-area-inset-bottom, 0px)); /* Increase bottom distance for better visibility */
    top: auto;
    position: absolute;
    z-index: 100; /* Higher z-index */
  }
}

@media (orientation: portrait) and (max-height: 700px) {
  .home-sets-circles, .away-sets-circles {
    bottom: calc(20px + var(--safe-area-inset-bottom, 0px)); /* Position with safe area inset */
    bottom: calc(20px + env(safe-area-inset-bottom, 0px)); /* Direct env() support */
  }
}

@media (orientation: portrait) and (min-height: 900px) {
  .home-sets-circles, .away-sets-circles {
    bottom: calc(30px + var(--safe-area-inset-bottom, 0px)); /* More space on larger screens with safe area inset */
    bottom: calc(30px + env(safe-area-inset-bottom, 0px)); /* Direct env() support */
  }
}

.sets-container {
  position: absolute;
  display: flex;
  justify-content: space-between;
  width: 100%;
  padding: 0.5rem 1rem;
  background-color: rgba(0, 0, 0, 0.4); /* Default background, will be overridden by theme */
  z-index: 5;
  box-sizing: border-box;
}

.team-sets {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.sets-label {
  font-size: 0.8rem;
  color: black; /* Changed to black for better visibility */
  text-transform: uppercase;
  opacity: 0.8;
}

.sets-controls {
  display: flex;
  align-items: center;
  margin-top: 0.2rem;
}

.sets-value {
  font-size: 1.2rem;
  font-weight: bold;
  color: black; /* Changed to black for better visibility */
  margin: 0 0.5rem;
  min-width: 1.5rem;
  text-align: center;
}

/* Remove the first sets-button definition to avoid duplication */

.sets-button:active {
  background-color: rgba(255, 255, 255, 0.5);
  transform: scale(0.95);
}

/* Add a border to the top of settings button container to better separate it visually */
.settings-button-container {
  border-top: 1px solid rgba(255, 255, 255, 0.2);
}

/* Styles for the set circles */

.team-sets-circles {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  position: absolute; /* Always absolute positioned */
  bottom: calc(10px + env(safe-area-inset-bottom, 0px)); /* Closer to bottom */
  left: 0;
  right: 0;
  width: 100%;
  z-index: 100; /* Increased z-index to ensure it's above other elements */
  margin: 0 auto; /* Center horizontally */
  pointer-events: auto; /* Ensure pointer events are not blocked */
  touch-action: auto; /* Allow touch interactions for these elements */
}

.home-sets-circles, .away-sets-circles {
  margin: 0 auto;
  width: auto; /* Allow natural width */
  display: flex;
  align-items: center;
  justify-content: center;
  /* Make sure position is inherited from team-sets-circles */
  position: absolute;
  bottom: calc(10px + env(safe-area-inset-bottom, 0px)); /* Closer to bottom */
  left: 0;
  right: 0;
  z-index: 100; /* Higher z-index to ensure visibility */
}

.sets-circles {
  display: flex;
  flex-direction: row; /* Changed to row for horizontal layout */
  gap: 0.5rem;
  justify-content: center;
  align-items: center;
  min-height: 30px; /* Ensure minimum height for circles */
}

.set-circle {
  width: 24px;
  height: 24px;
  border-radius: 50%;
  border: 2px solid black ; /* Force black border regardless of theme */
  transition: all 0.3s ease;
  cursor: pointer;
  background-color: transparent ; /* Force transparent background regardless of theme */
  box-shadow: 0 0 4px rgba(255, 255, 255, 0.4); /* Lighter shadow for better visibility with black border */
  margin: 0 2px; /* Add horizontal margins for spacing */
  flex-shrink: 0; /* Prevent circles from shrinking */
  z-index: 20; /* Higher z-index to ensure it's clickable */
  pointer-events: auto; /* Explicitly enable pointer events */
  touch-action: auto; /* Allow normal touch behaviors */
}

.set-circle.active {
  background-color: black ; /* Force black fill regardless of theme */
  border-color: black ; /* Force black border regardless of theme */
  box-shadow: 0 0 6px rgba(0, 0, 0, 0.7);
}

.sets-button {
  width: 28px;
  height: 28px;
  min-width: 28px;
  min-height: 28px;
  max-width: 28px;
  max-height: 28px;
  border-radius: 50%;
  border: 2px solid black;
  background-color: rgba(255, 255, 255, 0.5);
  color: black;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  cursor: pointer;
  margin: 0 2px;
  padding: 0;
  font-size: 16px;
  line-height: 1;
  transition: all 0.2s ease;
  box-shadow: 0 0 4px rgba(255, 255, 255, 0.4);
  aspect-ratio: 1 / 1; /* Ensure it's perfectly round */
  z-index: 20; /* Higher z-index to ensure it's clickable */
  pointer-events: auto; /* Explicitly enable pointer events */
  touch-action: auto; /* Allow normal touch behaviors */
}

.sets-button:active {
  background-color: rgba(0, 0, 0, 0.3);
  transform: scale(0.95);
}

@media (min-width: 768px) {
  .sets-button {
    min-width: 34px;
    min-height: 34px;
    max-width: 34px;
    max-height: 34px;
    width: 34px;
    height: 34px;
  }
}

@media (min-width: 1024px) {
  .sets-button {
    min-width: 38px;
    min-height: 38px;
    max-width: 38px;
    max-height: 38px;
  }
}

/* Landscape orientation adjustments */
@media (orientation: landscape) {
  .home-sets-circles, .away-sets-circles {
    position: absolute;
    top: auto;
    bottom: calc(20px + var(--safe-area-inset-bottom, 0px)); /* Account for safe area */
    bottom: calc(20px + env(safe-area-inset-bottom, 0px)); /* Direct env() support */
    left: 0;
    right: 0;
    margin: 0 auto;
    width: 100%;
    transform: none;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  
  /* Ensure score has enough bottom padding in landscape */
  .score {
    padding-bottom: 0; /* Removed padding as we're using absolute positioning */
    margin-bottom: 10px; /* Add some space below the score */
  }
  
  /* Fix round buttons in landscape mode */
  .sets-button {
    width: 28px;
    height: 28px;
    border-radius: 50%;
    aspect-ratio: 1 / 1;
  }
}

/* Responsive adjustments for team names and scores */
@media (max-width: 768px) {
  .team-name {
    font-size: clamp(2.5rem, 7vw, 4rem);
  }
  
  /* Score size is now controlled by CSS variables */
  /* .score {
    font-size: 12rem;
  } */
}

@media (max-width: 480px) {
  .team-name {
    font-size: clamp(2rem, 6vw, 3.5rem);
  }
  
  /* Commented out to allow fontConfig.ts to control score size
  .score {
    font-size: 10rem; 
  }
  */
}

.score-button .team-name,
.score-button .score {
  color: black; /* Changed from white to black text on colored team buttons */
  text-shadow: 0 2px 4px rgba(255, 255, 255, 0.3); /* Changed shadow for better contrast with black text */
}

/* Further ensure theme buttons have proper color - always black regardless of theme */
/* .app.dark .score-button .team-name,
.app.dark .score-button .score,
.app.light .score-button .team-name,
.app.light .score-button .score {
  color: black;
} */

/* Landscape orientation adjustments */
@media (orientation: landscape) and (max-height: 500px) {
  .team-name {
    font-size: clamp(1.8rem, 4vh, 3rem); /* Adjusted to be more balanced with portrait size */
    margin-top: 0.8rem; /* Add padding above team name (slightly less for small screens) */
    margin-bottom: 0.8rem; /* Increase space between team name and score */
  }
  
  /* Use the CSS variable instead of hardcoded font size */
  /* .score {
    font-size: 8rem;
  } */
}

/* Additional adjustments for notched devices in landscape */
@media (orientation: landscape) and (max-device-width: 896px) {
  .scoreboard-container {
    padding-left: 0;
    padding-right: 0;
    width: 100vw;
    left: 0;
    right: 0;
  }
  
  .settings-button {
    right: calc(max(env(safe-area-inset-right), 15px) + 15px);
    bottom: calc(max(env(safe-area-inset-bottom), 15px) + 5px);
  }
  
  .home-sets-circles, .away-sets-circles {
    bottom: calc(max(env(safe-area-inset-bottom), 15px) + 5px);
  }
}
